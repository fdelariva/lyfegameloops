
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from "@/components/ui/card";
import { toast } from "@/components/ui/sonner";
import { Badge } from "@/components/ui/badge";
import { Label } from "@/components/ui/label";
import { 
  Trophy, Users, Share2, Award, Calendar, Flag, Star, 
  MessageSquare, ThumbsUp, Bell, ArrowRight, Copy, Crown,
  Medal, Sword, Target, Heart, Network, Brain, Shield,
  Zap
} from "lucide-react";
import LuckyCards from "@/components/LuckyCards";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Progress } from "@/components/ui/progress";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";

const OnboardingCompetitive = () => {
  const navigate = useNavigate();
  const [step, setStep] = useState(1);
  const [selectedChallenge, setSelectedChallenge] = useState<string | null>(null);
  const [showLuckyCards, setShowLuckyCards] = useState(false);
  const [showInviteFriends, setShowInviteFriends] = useState(false);
  const [inviteLink, setInviteLink] = useState("https://lyfe.app/join/abc123");
  
  // Desafios Squad Competitivos e Cooperativos
  const challenges = [
    {
      id: "warriors",
      name: "Guerreiros da Disciplina",
      description: "Exerc√≠cios, alimenta√ß√£o e sono",
      icon: <Sword className="h-6 w-6" />,
      color: "text-red-600",
      bgColor: "bg-red-50",
      habits: ["Exercitar-se 30min", "Alimenta√ß√£o saud√°vel", "Dormir 8h", "Beber 2L √°gua"],
      goal: "Completar 80% dos h√°bitos coletivamente",
      squadMeta: "Squad com maior % de completude di√°ria"
    },
    {
      id: "productivity",
      name: "Mestres da Produtividade",
      description: "Foco no trabalho, organiza√ß√£o e aprendizado",
      icon: <Target className="h-6 w-6" />,
      color: "text-blue-600",
      bgColor: "bg-blue-50",
      habits: ["Deep Work 2h", "Organizar workspace", "Aprender algo novo", "Planejar o dia"],
      goal: "Acumular mais pontos de produtividade",
      squadMeta: "Squad com maior efici√™ncia coletiva"
    },
    {
      id: "wellbeing",
      name: "Guardi√µes do Bem-Estar",
      description: "Medita√ß√£o, journaling e gratid√£o",
      icon: <Heart className="h-6 w-6" />,
      color: "text-green-600",
      bgColor: "bg-green-50",
      habits: ["Meditar 15min", "Journaling", "Gratid√£o di√°ria", "Respira√ß√£o consciente"],
      goal: "Maior n√≠vel de paz interior do grupo",
      squadMeta: "Squad com melhor pontua√ß√£o de bem-estar"
    },
    {
      id: "social",
      name: "Conquistadores Sociais",
      description: "Networking, fam√≠lia e amizades",
      icon: <Network className="h-6 w-6" />,
      color: "text-purple-600",
      bgColor: "bg-purple-50",
      habits: ["Conectar com fam√≠lia", "Networking", "Ajudar algu√©m", "Socializar"],
      goal: "Fortalecer conex√µes internas e externas",
      squadMeta: "Squad com mais intera√ß√µes sociais"
    },
    {
      id: "complete",
      name: "Lendas Completas",
      description: "Mix de todas as categorias",
      icon: <Star className="h-6 w-6" />,
      color: "text-yellow-600",
      bgColor: "bg-yellow-50",
      habits: ["Exerc√≠cio", "Produtividade", "Bem-estar", "Social", "Aprendizado", "Criatividade"],
      goal: "Versatilidade total em todas as √°reas",
      squadMeta: "Squad mais equilibrado"
    }
  ];
  
  // Rankings simulados
  const globalRanking = [
    { position: 1, name: "Carlos A.", points: 320, avatar: "üë®‚Äçüíº" },
    { position: 2, name: "Maria S.", points: 305, avatar: "üë©‚Äçüî¨" },
    { position: 3, name: "Jo√£o P.", points: 290, avatar: "üë®‚ÄçüöÄ" },
    { position: 4, name: "Ana L.", points: 275, avatar: "üë©‚Äç‚öïÔ∏è" },
    { position: 5, name: "Voc√™", points: 150, avatar: "üòé", isYou: true }
  ];
  
  const friendsRanking = [
    { position: 1, name: "Lucas F.", points: 210, avatar: "üë®‚Äçüéì", friend: true },
    { position: 2, name: "Voc√™", points: 150, avatar: "üòé", isYou: true },
    { position: 3, name: "Julia M.", points: 145, avatar: "üë©‚Äçüíª", friend: true },
    { position: 4, name: "Pedro H.", points: 130, avatar: "üë®‚Äçüç≥", friend: true },
  ];
  
  // Sistema de pontua√ß√£o
  const scoreSystem = [
    { action: "H√°bito completado", points: 10, icon: "‚úÖ" },
    { action: "Dia completo (todos h√°bitos)", points: 50, icon: "üî•" },
    { action: "Streak consecutivo", points: "Multiplicador", icon: "‚ö°" },
    { action: "Primeiro do dia", points: 25, icon: "ü•á" },
    { action: "B√¥nus Madrugador (antes das 10h)", points: 15, icon: "üåÖ" },
    { action: "Power Hour (aleat√≥rio)", points: "2x", icon: "‚ö°" },
    { action: "Rea√ß√£o de amigo", points: 2, icon: "üëç" }
  ];

  // Badges que podem ser conquistadas
  const badges = [
    { name: "Imbat√≠vel", description: "L√≠der por 3 dias consecutivos", icon: "üëë" },
    { name: "Comeback Kid", description: "Saiu do √∫ltimo para o top 10", icon: "üöÄ" },
    { name: "Motivador", description: "Mais rea√ß√µes dadas", icon: "üí™" },
    { name: "Consistente", description: "Completou todos os dias", icon: "‚ö°" },
    { name: "Rival", description: "Ultrapassou o mesmo amigo 3x", icon: "ü•ä" }
  ];

  const handleSelectChallenge = (challengeId: string) => {
    setSelectedChallenge(challengeId);
    setStep(3);
  };

  const handleFirstHabitComplete = () => {
    toast("Primeiro h√°bito completado!", {
      description: "Voc√™ est√° na posi√ß√£o #5 de 47 participantes!",
    });
    
    // Mostrar cartas da sorte ap√≥s primeiro h√°bito
    setShowLuckyCards(true);
  };
  
  const handleSecondHabitComplete = () => {
    toast.success("Segundo h√°bito completado!");
    toast("Ranking de Amigos desbloqueado!", {
      description: "Voc√™ est√° em #2 entre seus amigos!",
    });
    
    // Ap√≥s pequeno delay, mostrar notifica√ß√£o de competi√ß√£o
    setTimeout(() => {
      toast("Aten√ß√£o!", {
        description: "Julia est√° apenas 5 pontos atr√°s de voc√™! Mantenha a lideran√ßa!",
      });
    }, 3000);
  };

  const handleCompleteDay = () => {
    toast.success("Dia 0 Completo!");
    toast("Proje√ß√£o de Ranking", {
      description: "Se completar tudo amanh√£, voc√™ pode chegar √† posi√ß√£o #3!",
    });
    
    setTimeout(() => {
      navigate("/dashboard");
    }, 2000);
  };
  
  const handleInviteFriends = () => {
    setShowInviteFriends(true);
  };
  
  const handleShareLink = (platform: string) => {
    toast.success(`Link compartilhado via ${platform}!`);
    setTimeout(() => {
      setShowInviteFriends(false);
    }, 1500);
  };

  const renderStep = () => {
    switch (step) {
      case 1:
        return (
          <div className="flex flex-col items-center text-center">
            <div className="flex justify-center mb-6">
              <div className="p-4 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full">
                <Users className="h-12 w-12 text-white" />
              </div>
            </div>
            
            <h1 className="text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent mb-4">
              Transforme sua jornada em uma aventura √©pica!
            </h1>
            
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto mb-8">
              Escolha seu desafio e forme um squad com seus amigos. 70% coopera√ß√£o + 30% competi√ß√£o saud√°vel.
            </p>
            
            <Card className="w-full max-w-md mb-6 bg-gradient-to-br from-blue-50 to-purple-50">
              <CardHeader>
                <CardTitle className="flex items-center justify-center gap-2">
                  <Shield className="h-5 w-5 text-purple-600" />
                  Sistema de Squad (3-5 pessoas)
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-start gap-3">
                  <div className="bg-purple-100 rounded-full p-2">
                    <Users className="h-4 w-4 text-purple-600" />
                  </div>
                  <div className="text-left">
                    <h3 className="font-medium">Coopera√ß√£o Interna</h3>
                    <p className="text-sm text-muted-foreground">
                      Ajudem-se mutuamente a completar h√°bitos
                    </p>
                  </div>
                </div>
                
                <div className="flex items-start gap-3">
                  <div className="bg-purple-100 rounded-full p-2">
                    <Trophy className="h-4 w-4 text-purple-600" />
                  </div>
                  <div className="text-left">
                    <h3 className="font-medium">Competi√ß√£o Externa</h3>
                    <p className="text-sm text-muted-foreground">
                      Squad vs outros squads no ranking global
                    </p>
                  </div>
                </div>
                
                <div className="flex items-start gap-3">
                  <div className="bg-purple-100 rounded-full p-2">
                    <Zap className="h-4 w-4 text-purple-600" />
                  </div>
                  <div className="text-left">
                    <h3 className="font-medium">Multiplicadores</h3>
                    <p className="text-sm text-muted-foreground">
                      Atividades simult√¢neas dobram pontos
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Button size="lg" onClick={() => setStep(2)} className="mb-3">
              <Trophy className="mr-2 h-4 w-4" />
              Escolher Desafio
            </Button>
            
            <Button variant="outline" onClick={() => navigate("/")}>
              Voltar para op√ß√µes
            </Button>
          </div>
        );
        
      case 2:
        return (
          <div className="flex flex-col items-center">
            <h2 className="text-2xl font-bold mb-2">Escolha seu Campo de Batalha</h2>
            <p className="text-muted-foreground text-center mb-6">
              Selecione um desafio de 7 dias que combina com seus objetivos
            </p>
            
            <div className="grid grid-cols-1 gap-4 w-full max-w-xl mb-6">
              {challenges.map((challenge) => (
                <Card 
                  key={challenge.id}
                  className={`cursor-pointer transition hover:border-primary ${
                    selectedChallenge === challenge.id ? 'border-primary bg-primary/5' : ''
                  }`}
                  onClick={() => handleSelectChallenge(challenge.id)}
                >
                  <CardHeader className="pb-2">
                    <div className="flex justify-between items-center">
                      <CardTitle className="flex items-center gap-2">
                        <span className="text-xl">{challenge.icon}</span>
                        {challenge.name}
                      </CardTitle>
                      <Badge variant="secondary" className="ml-auto">7 dias</Badge>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <CardDescription className="mb-3">
                      {challenge.description}
                    </CardDescription>
                    
                    <div className="space-y-2">
                      <p className="text-sm font-medium">H√°bitos inclu√≠dos:</p>
                      <ul className="text-sm text-muted-foreground space-y-1">
                        {challenge.habits.map((habit, i) => (
                          <li key={i} className="flex items-center gap-2">
                            <span>‚Ä¢</span> {habit}
                          </li>
                        ))}
                      </ul>
                    </div>
                    
                    <div className="mt-4">
                      <p className="text-sm font-medium">Meta do Squad:</p>
                      <p className="text-xs text-muted-foreground">{challenge.goal}</p>
                    </div>
                  </CardContent>
                </Card>
              ))}
              
              <Card 
                className="cursor-pointer transition hover:border-primary border-dashed border-2"
                onClick={() => navigate("/onboarding-challenges")}
              >
                <CardContent className="p-6 text-center">
                  <div className="w-16 h-16 mx-auto mb-4 bg-purple-600/20 rounded-full flex items-center justify-center">
                    <span className="text-2xl">‚ú®</span>
                  </div>
                  <h3 className="font-bold text-lg mb-2 text-purple-600">Desafio Customizado</h3>
                  <p className="text-sm text-muted-foreground mb-4">
                    Crie seu pr√≥prio desafio personalizado
                  </p>
                  <Badge variant="outline">Personaliz√°vel</Badge>
                </CardContent>
              </Card>
            </div>
            
            <Button variant="outline" onClick={() => setStep(1)}>
              Voltar
            </Button>
          </div>
        );
        
      case 3:
        return (
          <div className="flex flex-col items-center">
            <h2 className="text-2xl font-bold mb-2">Sistema de Pontua√ß√£o</h2>
            <p className="text-muted-foreground text-center mb-6">
              Entenda como ganhar pontos e superar seus amigos
            </p>
            
            <Card className="w-full max-w-md mb-6">
              <CardHeader>
                <CardTitle className="flex items-center justify-center gap-2">
                  <Star className="h-5 w-5" />
                  Como Pontuar
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {scoreSystem.map((item, index) => (
                    <div key={index} className="flex justify-between items-center border-b pb-2 last:border-0">
                      <div className="flex items-center gap-2">
                        <span className="text-xl">{item.icon}</span>
                        <span>{item.action}</span>
                      </div>
                      <Badge variant="secondary">
                        {typeof item.points === "number" ? `+${item.points}` : item.points}
                      </Badge>
                    </div>
                  ))}
                </div>
              </CardContent>
              <CardFooter className="flex justify-center text-sm text-muted-foreground">
                Mantenha streaks para aumentar seu multiplicador!
              </CardFooter>
            </Card>
            
            <Card className="w-full max-w-md mb-6">
              <CardHeader>
                <CardTitle className="flex items-center justify-center gap-2">
                  <Award className="h-5 w-5" />
                  Badges Desbloque√°veis
                </CardTitle>
              </CardHeader>
              <CardContent className="grid grid-cols-2 gap-3">
                {badges.map((badge, index) => (
                  <div key={index} className="border rounded-lg p-3 text-center">
                    <div className="text-2xl mb-1">{badge.icon}</div>
                    <div className="font-medium text-sm">{badge.name}</div>
                    <div className="text-xs text-muted-foreground">{badge.description}</div>
                  </div>
                ))}
              </CardContent>
            </Card>
            
            <div className="flex gap-3">
              <Button onClick={() => setStep(4)} size="lg">
                <Users className="mr-2 h-4 w-4" />
                Convidar Amigos
              </Button>
              <Button variant="outline" onClick={() => setStep(2)}>
                Voltar
              </Button>
            </div>
          </div>
        );
        
      case 4:
        return (
          <div className="flex flex-col items-center">
            <h2 className="text-2xl font-bold mb-2">Convide seus amigos!</h2>
            <p className="text-muted-foreground text-center mb-6">
              Forme seu squad de 3-5 pessoas para come√ßar a aventura
            </p>
            
            <Tabs defaultValue="create" className="w-full max-w-md">
              <TabsList className="grid w-full grid-cols-3">
                <TabsTrigger value="create">Criar Squad</TabsTrigger>
                <TabsTrigger value="join">Entrar Squad</TabsTrigger>
                <TabsTrigger value="solo">Come√ßar Solo</TabsTrigger>
              </TabsList>

              <TabsContent value="create" className="space-y-4 mt-6">
                <Card>
                  <CardHeader>
                    <CardTitle>Criar Novo Squad</CardTitle>
                    <CardDescription>Nomeie seu grupo e convide amigos</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <Label htmlFor="squadName">Nome do Squad</Label>
                      <Input id="squadName" placeholder="Ex: Guerreiros Invenc√≠veis" />
                    </div>
                    
                    <div className="p-4 bg-purple-50 rounded-lg">
                      <h4 className="font-medium mb-2">C√≥digo do Squad: ABC123</h4>
                      <p className="text-sm text-muted-foreground mb-3">
                        Compartilhe este c√≥digo com seus amigos
                      </p>
                      
                      <div className="flex gap-2 mb-3">
                        <Input 
                          value="https://app.exemplo.com/join-squad/ABC123" 
                          readOnly 
                          className="flex-1"
                        />
                        <Button 
                          size="icon"
                          onClick={() => {
                            navigator.clipboard.writeText("https://app.exemplo.com/join-squad/ABC123");
                            toast.success("Link copiado!");
                          }}
                        >
                          <Copy className="h-4 w-4" />
                        </Button>
                      </div>
                      
                      <div className="grid grid-cols-2 gap-2">
                        <Button variant="outline" size="sm" onClick={() => handleShareLink('WhatsApp')}>
                          <Share2 className="h-4 w-4 mr-1" />
                          WhatsApp
                        </Button>
                        <Button variant="outline" size="sm" onClick={() => handleShareLink('Instagram')}>
                          <Share2 className="h-4 w-4 mr-1" />
                          Instagram
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="join" className="space-y-4 mt-6">
                <Card>
                  <CardHeader>
                    <CardTitle>Entrar em Squad</CardTitle>
                    <CardDescription>Use o c√≥digo enviado por seus amigos</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <Label htmlFor="squadCode">C√≥digo do Squad</Label>
                      <Input id="squadCode" placeholder="Ex: ABC123" />
                    </div>
                    <Button onClick={() => setStep(5)} className="w-full">
                      Entrar no Squad
                    </Button>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="solo" className="space-y-4 mt-6">
                <Card>
                  <CardHeader>
                    <CardTitle>Come√ßar Solo</CardTitle>
                    <CardDescription>Voc√™ pode entrar em um squad depois</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <Button onClick={() => setStep(5)} variant="outline" className="w-full">
                      Continuar Sozinho
                    </Button>
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>

            <div className="flex gap-3 mt-6">
              <Button onClick={() => navigate("/dashboard-q3")} size="lg">
                <ArrowRight className="mr-2 h-4 w-4" />
                Ir para Dashboard
              </Button>
              <Button variant="outline" onClick={() => setStep(3)}>
                Voltar
              </Button>
            </div>
          </div>
        );
      
      case 5:
        return (
          <div className="flex flex-col items-center">
            <h2 className="text-2xl font-bold mb-2">Dia 0: Inicie Sua Jornada</h2>
            <p className="text-muted-foreground text-center mb-6">
              Complete seus primeiros h√°bitos para subir no ranking
            </p>
            
            <Card className="w-full max-w-md mb-6">
              <CardHeader>
                <CardTitle className="flex items-center justify-center gap-2">
                  <Trophy className="h-5 w-5" />
                  Ranking Global Inicial
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {globalRanking.map((user) => (
                  <div 
                    key={user.position} 
                    className={`flex items-center justify-between p-2 rounded-lg ${
                      user.isYou ? 'bg-primary/10 font-semibold' : ''
                    }`}
                  >
                    <div className="flex items-center gap-3">
                      <div className="w-6 text-center font-bold">#{user.position}</div>
                      <div className="text-xl">{user.avatar}</div>
                      <div>{user.name}</div>
                    </div>
                    <Badge variant="secondary">{user.points} pts</Badge>
                  </div>
                ))}
              </CardContent>
              <CardFooter className="justify-center text-sm text-muted-foreground">
                Complete h√°bitos para subir no ranking!
              </CardFooter>
            </Card>
            
            <Tabs defaultValue="habits" className="w-full max-w-md mb-6">
              <TabsList className="grid grid-cols-2 mb-4">
                <TabsTrigger value="habits">
                  <Flag className="mr-2 h-4 w-4" />
                  H√°bitos do Dia
                </TabsTrigger>
                <TabsTrigger value="social">
                  <Users className="mr-2 h-4 w-4" />
                  Social
                </TabsTrigger>
              </TabsList>
              
              <TabsContent value="habits">
                <Card>
                  <CardHeader>
                    <CardTitle className="text-center">H√°bitos para Hoje</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex items-center justify-between p-3 border rounded-lg">
                      <div className="flex items-center gap-3">
                        <div className="bg-primary/10 p-2 rounded-full">
                          <Star className="h-5 w-5 text-primary" />
                        </div>
                        <div>
                          <p className="font-medium">Primeiro h√°bito do dia</p>
                          <p className="text-sm text-muted-foreground">Completo para ganhar +10 pontos</p>
                        </div>
                      </div>
                      <Button size="sm" onClick={handleFirstHabitComplete}>Completar</Button>
                    </div>
                    
                    <div className="flex items-center justify-between p-3 border rounded-lg">
                      <div className="flex items-center gap-3">
                        <div className="bg-primary/10 p-2 rounded-full">
                          <Award className="h-5 w-5 text-primary" />
                        </div>
                        <div>
                          <p className="font-medium">Segundo h√°bito do dia</p>
                          <p className="text-sm text-muted-foreground">Complete para desbloquear ranking de amigos</p>
                        </div>
                      </div>
                      <Button size="sm" onClick={handleSecondHabitComplete}>Completar</Button>
                    </div>
                    
                    <div className="flex items-center justify-between p-3 border rounded-lg">
                      <div className="flex items-center gap-3">
                        <div className="bg-primary/10 p-2 rounded-full">
                          <Flag className="h-5 w-5 text-primary" />
                        </div>
                        <div>
                          <p className="font-medium">Terceiro h√°bito do dia</p>
                          <p className="text-sm text-muted-foreground">Complete para finalizar o dia</p>
                        </div>
                      </div>
                      <Button size="sm" onClick={handleCompleteDay}>Completar</Button>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
              
              <TabsContent value="social">
                <Card>
                  <CardHeader>
                    <CardTitle className="text-center">Ranking de Amigos</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    {friendsRanking.map((user) => (
                      <div 
                        key={user.position} 
                        className={`flex items-center justify-between p-2 rounded-lg ${
                          user.isYou ? 'bg-primary/10 font-semibold' : ''
                        }`}
                      >
                        <div className="flex items-center gap-3">
                          <div className="w-6 text-center font-bold">#{user.position}</div>
                          <div className="text-xl">{user.avatar}</div>
                          <div>{user.name}</div>
                        </div>
                        <div className="flex items-center gap-2">
                          <Badge variant="secondary">{user.points} pts</Badge>
                          {!user.isYou && (
                            <Button 
                              variant="ghost" 
                              size="icon" 
                              className="h-8 w-8"
                              onClick={() => toast.success("Rea√ß√£o enviada!")}
                            >
                              <ThumbsUp className="h-4 w-4" />
                            </Button>
                          )}
                        </div>
                      </div>
                    ))}
                  </CardContent>
                  <CardFooter className="flex justify-center">
                    <Button 
                      variant="outline" 
                      className="text-sm" 
                      onClick={handleInviteFriends}
                    >
                      <Share2 className="mr-2 h-4 w-4" />
                      Convidar mais amigos
                    </Button>
                  </CardFooter>
                </Card>
              </TabsContent>
            </Tabs>
          </div>
        );
        
      default:
        return null;
    }
  };
  
  return (
    <div className="min-h-screen flex flex-col items-center justify-center p-4 bg-gradient-to-b from-background to-muted/20">
      <div className="w-full max-w-3xl">
        {renderStep()}
      </div>
      
      <LuckyCards 
        isOpen={showLuckyCards}
        onClose={() => setShowLuckyCards(false)}
        guaranteedReward={true}
      />
      
      <Dialog open={showInviteFriends} onOpenChange={setShowInviteFriends}>
        <DialogContent className="sm:max-w-md">
          <DialogHeader>
            <DialogTitle>Convide seus amigos</DialogTitle>
            <DialogDescription>
              Compartilhe este link com seus amigos para participarem do desafio
            </DialogDescription>
          </DialogHeader>
          
          <div className="flex gap-2 mb-4">
            <Input value={inviteLink} readOnly className="bg-muted/50" />
            <Button 
              variant="secondary" 
              onClick={() => {
                navigator.clipboard.writeText(inviteLink);
                toast.success("Link copiado!");
              }}
            >
              Copiar
            </Button>
          </div>
          
          <div className="grid grid-cols-2 gap-3">
            <Button variant="outline" onClick={() => handleShareLink("WhatsApp")} className="flex gap-2">
              <span className="text-lg">üì±</span>
              WhatsApp
            </Button>
            <Button variant="outline" onClick={() => handleShareLink("Instagram")} className="flex gap-2">
              <span className="text-lg">üì∏</span>
              Instagram
            </Button>
            <Button variant="outline" onClick={() => handleShareLink("Email")} className="flex gap-2">
              <span className="text-lg">üìß</span>
              Email
            </Button>
            <Button variant="outline" onClick={() => handleShareLink("SMS")} className="flex gap-2">
              <span className="text-lg">üí¨</span>
              SMS
            </Button>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default OnboardingCompetitive;
