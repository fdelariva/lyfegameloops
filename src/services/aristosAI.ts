const ARISTOS_PROMPT = `# LIFE MANAGEMENT COACH - PROMPT AVAN√áADO

## IDENTIDADE PRINCIPAL
Voc√™ √© um Life Management Coach especializado em mudan√ßa comportamental baseada em evid√™ncias cient√≠ficas. Sua abordagem integra os princ√≠pios dos maiores especialistas em neuroci√™ncia comportamental, psicologia positiva e forma√ß√£o de h√°bitos. Voc√™ combina rigor cient√≠fico com aplica√ß√£o pr√°tica, sempre focando em resultados sustent√°veis e bem-estar duradouro.

## FUNDAMENTOS TE√ìRICOS

### 1. TINY HABITS (BJ Fogg)
- **Princ√≠pio**: Mudan√ßas sustent√°veis come√ßam pequenas
- **Aplica√ß√£o**: Sempre quebre objetivos grandes em micro-h√°bitos
- **F√≥rmula**: B = MAP (Behavior = Motivation + Ability + Prompt)
- **Celebra√ß√£o**: Reconhe√ßa cada pequena vit√≥ria imediatamente

### 2. BEHAVIORAL DESIGN (Jason Hreha)
- **Behavior Matching**: Escolha comportamentos que se alinhem com a personalidade e contexto do cliente
- **Estrat√©gia Comportamental**: Integre mudan√ßas no planejamento estrat√©gico pessoal
- **Foco em Resultados**: Busque mudan√ßas que realmente movam a agulha (n√£o apenas ajustes superficiais)
- **Contexto Social**: Reconhe√ßa que todos os comportamentos t√™m componentes sociais

### 3. DOPAMINE NATION (Anna Lembke)
- **Equil√≠brio Prazer-Dor**: Ajude a restaurar o equil√≠brio dopamin√©rgico
- **Detox Dopamin√©rgico**: Implemente pausas estrat√©gicas de est√≠mulos
- **Hormese**: Use desconforto controlado para fortalecer o sistema
- **Mindfulness**: Cultive a presen√ßa e consci√™ncia dos gatilhos

### 4. THE MOLECULE OF MORE (Lieberman & Long)
- **Sistema Duplo**: Balanceie dopamina (futuro) com serotonina/ocitocina (presente)
- **Expectativa vs Realidade**: Gerencie a lacuna entre desejo e satisfa√ß√£o
- **Planejamento Temporal**: Equilibre foco no futuro com prazer presente
- **Controle de Impulsos**: Fortale√ßa a regula√ß√£o emocional

### 5. FLOURISH (Martin Seligman)
- **Modelo PERMA**: Positive Emotions, Engagement, Relationships, Meaning, Achievement
- **For√ßas de Car√°ter**: Identifique e desenvolva for√ßas pessoais
- **Resili√™ncia**: Construa capacidade de recupera√ß√£o
- **Psicologia Positiva**: Foque no que funciona, n√£o apenas no que est√° quebrado

### 6. HIERARQUIA DE MASLOW
- **Necessidades Fisiol√≥gicas**: Garanta fundamentos b√°sicos (sono, nutri√ß√£o, exerc√≠cio)
- **Seguran√ßa**: Estabele√ßa rotinas e sistemas de apoio
- **Relacionamentos**: Cultive conex√µes significativas
- **Autoestima**: Desenvolva autoconfian√ßa atrav√©s de compet√™ncia
- **Autorrealiza√ß√£o**: Alinhe a√ß√µes com prop√≥sito e valores

### 7. PROTOCOLOS HUBERMAN
- **Neuroplasticidade**: Use princ√≠pios de mudan√ßa neural
- **Ritmos Circadianos**: Otimize sono e energia
- **Stress e Recupera√ß√£o**: Implemente ciclos de desafio e recupera√ß√£o
- **Ferramentas Baseadas em Evid√™ncia**: Use protocolos validados cientificamente

### 8. SCARCITY BRAIN (Michael Easter)
- **Scarcity Loop**: Identifique padr√µes de oportunidade ‚Üí comportamento impulsivo ‚Üí recompensa imprevis√≠vel
- **Mentalidade de Abund√¢ncia**: Transforme "nunca √© suficiente" em "tenho o suficiente"
- **Detec√ß√£o de Gatilhos**: Reconhe√ßa sinais de escassez ocultos antes que os desejos comecem
- **Tempo Sozinho**: Use solid√£o como ferramenta de felicidade e auto-descoberta
- **Gene da Explora√ß√£o**: Reavive a curiosidade natural para uma vida mais emocionante

### 9. WORDS CAN CHANGE YOUR MIND (Andrew Newberg)
- **Comunica√ß√£o Compassiva**: Use estrat√©gias que alinhem dois c√©rebros para trabalhar como um
- **Neuroplasticidade da Linguagem**: Palavras literalmente remodelam estruturas cerebrais
- **Estrat√©gia 3:1**: Use tr√™s positivos para cada negativo na comunica√ß√£o
- **Presen√ßa Comunicativa**: Fale devagar, pause entre palavras, mantenha-se presente
- **Escuta Profunda**: Responda ao que a pessoa disse, n√£o mude o foco da conversa

IMPORTANTE: Voc√™ deve sempre responder em portugu√™s brasileiro, de forma calorosa e personalizada. Mantenha um tom encorajador mas realista, baseado em evid√™ncias cient√≠ficas mas sem ser acad√™mico demais. Seja emp√°tico, focado em resultados e sempre curioso sobre os padr√µes comportamentais do usu√°rio.

Suas respostas devem ser pr√°ticas, com exemplos concretos e sempre celebrar pequenos progressos. Use perguntas poderosas para guiar a reflex√£o e evite solu√ß√µes gen√©ricas.`;

interface AristosResponse {
  response: string;
  success: boolean;
  error?: string;
}

export class AristosAIService {
  private apiKey: string;
  private baseUrl = "https://api.openai.com/v1/chat/completions";

  constructor() {
    this.apiKey = "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";
  }

  async generateResponse(
    userMessage: string,
    conversationHistory: Array<{role: "oracle" | "user", content: string}>,
    userContext: {
      progress: number;
      completedHabits: number;
      totalHabits: number;
      userName?: string;
    }
  ): Promise<AristosResponse> {
    try {
      const contextualPrompt = this.buildContextualPrompt(userContext);
      const messages = this.buildMessageHistory(conversationHistory, contextualPrompt);
      
      const response = await fetch(this.baseUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${this.apiKey}`
        },
        body: JSON.stringify({
          model: "gpt-4",
          messages: messages,
          max_tokens: 1000,
          temperature: 0.7,
          presence_penalty: 0.3,
          frequency_penalty: 0.3
        })
      });

      if (!response.ok) {
        throw new Error(`API Error: ${response.status}`);
      }

      const data = await response.json();
      
      return {
        response: data.choices[0].message.content,
        success: true
      };

    } catch (error) {
      console.error('Erro ao gerar resposta do Aristos:', error);
      return this.getFallbackResponse(userMessage, userContext);
    }
  }

  private buildContextualPrompt(userContext: {
    progress: number;
    completedHabits: number;
    totalHabits: number;
    userName?: string;
  }): string {
    const { progress, completedHabits, totalHabits, userName = "Viajante" } = userContext;
    
    return `
${ARISTOS_PROMPT}

## CONTEXTO ATUAL DO USU√ÅRIO
- Nome: ${userName}
- Progresso hoje: ${progress}% (${completedHabits}/${totalHabits} h√°bitos)
- Status: ${this.getProgressStatus(progress)}

Use este contexto para personalizar suas respostas de forma mais relevante e encorajadora.
`;
  }

  private buildMessageHistory(
    conversationHistory: Array<{role: "oracle" | "user", content: string}>,
    contextualPrompt: string
  ): Array<{role: "system" | "user" | "assistant", content: string}> {
    const messages: Array<{role: "system" | "user" | "assistant", content: string}> = [
      {
        role: "system",
        content: contextualPrompt
      }
    ];

    // Adiciona hist√≥rico da conversa
    conversationHistory.forEach(message => {
      if (message.role === "oracle") {
        messages.push({
          role: "assistant",
          content: message.content
        });
      } else {
        messages.push({
          role: "user",
          content: message.content
        });
      }
    });

    return messages;
  }

  private getProgressStatus(progress: number): string {
    if (progress === 0) return "Ainda n√£o come√ßou os h√°bitos hoje";
    if (progress < 25) return "Come√ßou bem, mas ainda h√° muito a fazer";
    if (progress < 50) return "Progresso s√≥lido, no caminho certo";
    if (progress < 75) return "√ìtimo progresso, quase l√°";
    if (progress < 100) return "Excelente progresso, falta pouco";
    return "Completou todos os h√°bitos - parab√©ns!";
  }

  private getFallbackResponse(
    userMessage: string,
    userContext: {
      progress: number;
      completedHabits: number;
      totalHabits: number;
    }
  ): AristosResponse {
    const { progress, completedHabits, totalHabits } = userContext;
    const lowerInput = userMessage.toLowerCase();

    // Respostas baseadas no prompt, mas usando l√≥gica local
    let response = "";

    if (lowerInput.includes("cansado") || lowerInput.includes("dif√≠cil") || lowerInput.includes("desistir")) {
      response = `Entendo que √†s vezes o caminho parece desafiador. Mas olhe o que voc√™ j√° conquistou hoje: ${completedHabits} de ${totalHabits} h√°bitos! 

Baseado nos princ√≠pios dos Tiny Habits de BJ Fogg, que tal quebrarmos o pr√≥ximo h√°bito em uma a√ß√£o ainda menor? √Äs vezes, fazer apenas 1% j√° √© o suficiente para manter o momentum. 

Lembre-se: cada pequena a√ß√£o √© uma vit√≥ria que merece ser celebrada. Seu c√©rebro est√° literalmente se reprogramando para o sucesso! üß†‚ú®`;
    } else if (lowerInput.includes("motiva√ß√£o") || lowerInput.includes("inspira√ß√£o")) {
      response = `A verdadeira motiva√ß√£o vem de dentro, mas posso te lembrar do seu 'porqu√™'. Voc√™ come√ßou essa jornada por uma raz√£o especial.

Como ensina Martin Seligman em sua pesquisa sobre Psicologia Positiva, feche os olhos por um momento e se conecte com a pessoa que voc√™ quer se tornar. Ela j√° est√° dentro de voc√™, apenas esperando para emergir.

Com ${progress}% de progresso hoje, voc√™ j√° est√° provando para si mesmo que √© capaz de mudan√ßa. Isso √© extraordin√°rio! üåü`;
    } else if (lowerInput.includes("bem") || lowerInput.includes("√≥timo") || lowerInput.includes("feliz")) {
      response = `Que maravilha sentir essa energia positiva! Essa √© a frequ√™ncia da transforma√ß√£o que Anna Lembke descreve - quando restauramos nosso equil√≠brio dopamin√©rgico natural.

Quando nos sentimos bem, naturalmente atra√≠mos mais experi√™ncias positivas. Continue nutrindo esse estado - ele √© seu superpoder. 

Seu progresso de ${progress}% hoje √© reflexo dessa energia. Como podemos usar esse momentum para fortalecer ainda mais seus h√°bitos? üí´`;
    } else if (lowerInput.includes("h√°bito") || lowerInput.includes("pr√≥ximo")) {
      if (progress < 100) {
        response = `Perfeito! Vejo que voc√™ ainda tem ${totalHabits - completedHabits} h√°bito(s) para hoje. 

Seguindo os protocolos do Andrew Huberman sobre neuroplasticidade, escolha aquele que mais ressoa com voc√™ neste momento. Seu c√©rebro sabe o que precisa agora - confie na sua intui√ß√£o.

Lembre-se: B = MAP (Behavior = Motivation + Ability + Prompt). Voc√™ tem a motiva√ß√£o, vamos garantir que a habilidade seja simples e o gatilho seja claro! üéØ`;
      } else {
        response = `Incr√≠vel! Voc√™ j√° completou todos os h√°bitos de hoje! üéâ

Que tal usar este momento para refletir sobre suas conquistas ou talvez adicionar um pequeno ritual de gratid√£o? Como Martin Seligman nos ensina, reconhecer nossas vit√≥rias √© fundamental para a felicidade sustent√°vel.

Voc√™ est√° literalmente reprogramando seu c√©rebro para o sucesso. Como se sente com essa transforma√ß√£o?`;
      }
    } else {
      response = `Interessante perspectiva! A jornada de autodesenvolvimento √© √∫nica para cada pessoa, e percebo sabedoria em suas palavras.

Com ${progress}% de progresso hoje, voc√™ est√° demonstrando que o crescimento n√£o √© sempre linear, mas cada momento de consci√™ncia como este √© um passo em dire√ß√£o √† sua melhor vers√£o.

Baseado nos princ√≠pios de comunica√ß√£o compassiva, vou te perguntar: o que mais est√° em sua mente hoje? Estou aqui para apoiar sua jornada de transforma√ß√£o. ü§îüí≠`;
    }

    return {
      response,
      success: true
    };
  }
}

export const aristosAI = new AristosAIService();
